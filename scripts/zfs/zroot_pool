#!/usr/bin/env bash

set -o errexit
set -o nounset

function zroot_pool {

root_drive_list=${root_drive_list:-""}
altroot=${altroot:-""}

if [[ "${root_drive_list}" == "" ]]
then
    echo "****Failed to setup zroot pool. root_drive_list is not set.****"
    return 1
fi
if [[ "${altroot}" == "" ]]
then
    echo "****Failed to setup zroot pool. altroot is not set.****"
    return 1
fi

for check_drive in $root_drive_list
do
    if [[ ! -e /dev/${check_drive} ]]
    then
        echo "****Failed to setup zroot pool. $check_drive is not a valid drive.****"
        return 1
    fi
done

echo "    Creating boot and ZFS root partitions on drive list: ${root_drive_list}"
local drive_number=0
for root_drive in $root_drive_list
do
    gpart create -s gpt "${root_drive}" >/dev/null 2>&1
    gpart add -a 4k -s 512k -t freebsd-boot "${root_drive}" >/dev/null 2>&1
    gpart add -a 4k -t freebsd-zfs -l "boot${drive_number}" "${root_drive}" >/dev/null 2>&1
    gpart bootcode -b /boot/pmbr -p /boot/gptzfsboot -i 1 "${root_drive}" >/dev/null 2>&1
    gnop create -S 4096 "/dev/gpt/boot${drive_number}" >/dev/null 2>&1
    local zpool_list="${zpool_list:-}${space:-}/dev/gpt/boot${drive_number}.nop"
    local space=" "
    ((drive_number = drive_number + 1))
done

echo "    Creating zroot pool at $altroot using cache at $zcache"
zpool create -f -m none -o altroot="${altroot}" -o cachefile="${zcache}" zroot mirror ${zpool_list} >/dev/null 2>&1

echo "    ZFS re-import to set ashift=12 using gnop trick"
zpool export zroot
for gpt_nop in /dev/gpt/boot*.nop
do
    gnop destroy "${gpt_nop}" >/dev/null 2>&1
done
zpool import -o altroot="${altroot}" -o cachefile="${zcache}" zroot

echo "    setting ZFS flags"
zpool set bootfs=zroot zroot
zpool set listsnapshots=on zroot
zfs set compression=lz4 zroot
zfs set atime=off zroot

echo "    Root drive ZFS setup complete."
return 0
}

