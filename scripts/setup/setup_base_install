#!/usr/bin/env bash
# 
# ARGS
# $1 = ARCH
# $2 = RELEASE
# $3 = ROOT
# $4 = KERNEL FLAG
#

set -o errexit
set -o nounset

function base_install {

# make sure args are passed
if [[ $# -eq 0 ]]
then
    exit 1
fi

local ARCH=$1
local RELEASE=$2
local ROOT=$3
local KERNEL=$4

# Check variables
# This would changeover time based on what is supported
local VALID_ARCH="amd64 arm i386 ia64 powerpc sparc64"
local VALID_RELEASE_NUM="9.3 10.1 10.2 10.3 11.0"
local ARCH_VALID=0
local RELEASE_VALID=0
for ARCH_CHECK in $VALID_ARCH
do
    if [[ ${ARCH} == ${ARCH_CHECK} ]]
    then
        local ARCH_VALID=1
    fi
done
for RELEASE_CHECK_NUM in $VALID_RELEASE_NUM
do
    if [[ ${RELEASE} == ${RELEASE_CHECK_NUM}-RELEASE ]]
    then
        local RELEASE_VALID=1
    fi
done
if [[ $RELEASE_VALID -ne 1 ]] || [[ $ARCH_VALID -ne 1 ]] || [[ ! -d "${ROOT}" ]]
then
    echo "Invalid variable supplied."
    exit 1
fi
if [[ ${KERNEL} -ne 1 ]]
    local KERNEL=0
fi

if [[ -d /tmp ]]
then
    local TMP_FILES="/tmp"
elif [[ -d /var/tmp ]]
    local TMP_FILES="/var/tmp"
else 
    local TMP_FILES="${ROOT}"
fi

curl -fLo "${TMP_FILES}/base.txz" "ftp://ftp.freebsd.org/pub/FreeBSD/releases/${ARCH}/${RELEASE}/base.txz"
if [[ ${KERNEL} -eq 1 ]]
then
    curl -fLo "${TMP_FILES}/kernel.txz" "ftp://ftp.freebsd.org/pub/FreeBSD/releases/${ARCH}/${RELEASE}/kernel.txz"
fi
if command -v pv >/dev/null 2>&1
then
    pv "${TMP_FILES}/base.txz" | tar -xf - -C "${ROOT}"
    if [[ ${KERNEL} -eq 1 ]]
    then
        pv "${TMP_FILES}/kernel.txz" | tar -xf - -C "${ROOT}"
    fi
else
    echo "Installing base. Please wait..."
    tar -xf "${TMP_FILES}/base.txz" -C "${ROOT}" >/dev/null 2>&1
    if [[ ${KERNEL} -eq 1 ]]
    then
        echo "Installing kernel. Please wait..."
        tar -xf "${TMP_FILES}/kernel.txz" -C "${ROOT}" >/dev/null 2>&1
    fi
fi

rm "${TMP_FILES}/base.txz"
if [[ ${KERNEL} -eq 1 ]]
then
    rm "${TMP_FILES}/kernel.txz"
fi

echo "Install successful."

return 0

}


