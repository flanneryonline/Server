#!/usr/bin/env bash

set -o errexit
set -o nounset

function system_install {

local root=${1:-}
local kernel=${2:-0}

# Check variables
# This will change over time based on what is supported
if [[ ${root} == "" ]]
    echo "No value passed for install location."
    return 1
fi
local valid_arch="amd64 arm i386 ia64 powerpc sparc64"
local valid_release_num="9.3 10.1 10.2 10.3 11.0"
local arch_valid=0
local release_valid=0
for arch_check in "${valid_arch}"
do
    if [[ ${arch} == ${arch_check} ]]
    then
        local arch_valid=1
    fi
done
for release_check_num in "${valid_release_num}"
do
    if [[ ${release} == ${release_check_num}-RELEASE ]]
    then
        local release_valid=1
    fi
done
if [[ $release_valid -ne 1 ]] || [[ $arch_valid -ne 1 ]] || [[ ! -d "${root}" ]]
then
    echo "Invalid variable set."
    return 1
fi
temp_dir=${temp_dir:-"/var/tmp"}

#making changes
if [[ ${kernel} -eq 0 ]]
    echo "Installing FreeBSD version ${release} for ${arch} to ${root} with no kernel."
else
    echo "Installing FreeBSD version ${release} for ${arch} to ${root} with kernel."
fi
curl -fLo "${temp_dir}/base.txz" "ftp://ftp.freebsd.org/pub/FreeBSD/releases/${arch}/${release}/base.txz"
if [[ ${kernel} -eq 1 ]]
then
    curl -fLo "${temp_dir}/kernel.txz" "ftp://ftp.freebsd.org/pub/FreeBSD/releases/${arch}/${release}/kernel.txz"
fi
if command -v pv >/dev/null 2>&1
then
    pv "${temp_dir}/base.txz" | tar -xf - -C "${root}"
    if [[ ${kernel} -eq 1 ]]
    then
        pv "${temp_dir}/kernel.txz" | tar -xf - -C "${root}"
    fi
else
    echo "Installing base. Please wait..."
    tar -xf "${temp_dir}/base.txz" -C "${root}" >/dev/null 2>&1
    if [[ ${kernel} -eq 1 ]]
    then
        echo "Installing kernel. Please wait..."
        tar -xf "${temp_dir}/kernel.txz" -C "${root}" >/dev/null 2>&1
    fi
fi
rm "${temp_dir}/base.txz"
if [[ ${kernel} -eq 1 ]]
then
    rm "${temp_dir}/kernel.txz"
fi

echo "Install successful."
return 0
}
