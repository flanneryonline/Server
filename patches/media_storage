#!/usr/bin/env bash

set -e

export DEBIAN_FRONTEND=noninteractive
SERVER_INSTALL=${SERVER_INSTALL:-/opt/server}
. "$SERVER_INSTALL/environment"
. "$SERVER_INSTALL/include"

version=0

check_version $version ${0##*/} && echo "patch ${0##*/} already on latest version." && exit 0

patch_requires "apt_install" 1
patch_requires "users" 0
patch_requires "storage" 1

echo "getting system settings"

fast_storage_enabled=$(get_server_setting "fast-storage-enabled")
fast_storage_enabled=${fast_storage_enabled:-0}
slow_storage_enabled=$(get_server_setting "slow-storage-enabled")
slow_storage_enabled=${slow_storage_enabled:-0}
link_backup=$(get_server_setting "link-backup")
link_backup=${link_backup:-0}

echo "  fast_storage_enabled=$fast_storage_enabled"
echo "  slow_storage_enabled=$slow_storage_enabled"
echo "  link_backup=$link_backup"

if [ $link_backup -eq 0 ]
then
    if [ $fast_storage_enabled -eq 1 ]
    then
        if ! zfs list $FAST_STORAGE_POOL/configs >/dev/null 2>&1
        then
            zfs create -o mountpoint=$STORAGE_CONFIG_DIR $FAST_STORAGE_POOL/configs
        fi
    else
        if ! zfs list $ROOT_POOL/configs >/dev/null 2>&1
        then
            zfs create -o mountpoint=$STORAGE_CONFIG_DIR $ROOT_POOL/configs
        fi
    fi

    [ ! -d "$STORAGE_CONFIG_DIR/plex" ] && mkdir "$STORAGE_CONFIG_DIR/plex"
    [ ! -d "$STORAGE_CONFIG_DIR/tautulli" ] && mkdir "$STORAGE_CONFIG_DIR/tautulli"
    [ ! -d "$STORAGE_CONFIG_DIR/ombi" ] && mkdir "$STORAGE_CONFIG_DIR/ombi"
    [ ! -d "$STORAGE_CONFIG_DIR/pia" ] && mkdir "$STORAGE_CONFIG_DIR/pia"
    [ ! -d "$STORAGE_CONFIG_DIR/nzbget" ] && mkdir "$STORAGE_CONFIG_DIR/nzbget"
    [ ! -d "$STORAGE_CONFIG_DIR/deluge" ] && mkdir "$STORAGE_CONFIG_DIR/deluge"
    [ ! -d "$STORAGE_CONFIG_DIR/hydra" ] && mkdir "$STORAGE_CONFIG_DIR/hydra"
    [ ! -d "$STORAGE_CONFIG_DIR/jackett" ] && mkdir "$STORAGE_CONFIG_DIR/jackett"
    [ ! -d "$STORAGE_CONFIG_DIR/sonarr" ] && mkdir "$STORAGE_CONFIG_DIR/sonarr"
    [ ! -d "$STORAGE_CONFIG_DIR/radarr" ] && mkdir "$STORAGE_CONFIG_DIR/radarr"
    [ ! -d "$STORAGE_CONFIG_DIR/portainer" ] && mkdir "$STORAGE_CONFIG_DIR/portainer"

    if [ $slow_storage_enabled -eq 1 ]
    then
        if ! zfs list $SLOW_STORAGE_POOL/media >/dev/null 2>&1
        then
            zfs create -o mountpoint=$STORAGE_MEDIA_DIR $SLOW_STORAGE_POOL/media
        fi
        if ! zfs list $SLOW_STORAGE_POOL/media/shows >/dev/null 2>&1
        then
            zfs create -o mountpoint=$STORAGE_MEDIA_DIR/shows $SLOW_STORAGE_POOL/media/shows
        fi
        if ! zfs list $SLOW_STORAGE_POOL/media/movies >/dev/null 2>&1
        then
            zfs create -o mountpoint=$STORAGE_MEDIA_DIR/movies $SLOW_STORAGE_POOL/media/movies
        fi
        if ! zfs list $SLOW_STORAGE_POOL/media/unsorted >/dev/null 2>&1
        then
            zfs create -o mountpoint=$STORAGE_MEDIA_DIR/unsorted $SLOW_STORAGE_POOL/media/unsorted
        fi
        if ! zfs list $SLOW_STORAGE_POOL/downloads >/dev/null 2>&1
        then
            zfs create -o mountpoint=$STORAGE_DOWNLOAD_DIR $SLOW_STORAGE_POOL/downloads
        fi
        if ! zfs list $SLOW_STORAGE_POOL/shares >/dev/null 2>&1
        then
            zfs create -o mountpoint=$STORAGE_SHARE_DIR $SLOW_STORAGE_POOL/shares
        fi
    else
        if ! zfs list $ROOT_POOL/media >/dev/null 2>&1
        then
            zfs create -o mountpoint=$STORAGE_MEDIA_DIR $ROOT_POOL/media
        fi
        if ! zfs list $ROOT_POOL/media/shows >/dev/null 2>&1
        then
            zfs create -o mountpoint=$STORAGE_MEDIA_DIR/shows $ROOT_POOL/media/shows
        fi
        if ! zfs list $ROOT_POOL/media/movies >/dev/null 2>&1
        then
            zfs create -o mountpoint=$STORAGE_MEDIA_DIR/movies $ROOT_POOL/media/movies
        fi
        if ! zfs list $ROOT_POOL/media/unsorted >/dev/null 2>&1
        then
            zfs create -o mountpoint=$STORAGE_MEDIA_DIR/unsorted $ROOT_POOL/media/unsorted
        fi
        if ! zfs list $ROOT_POOL/downloads >/dev/null 2>&1
        then
            zfs create -o mountpoint=$STORAGE_DOWNLOAD_DIR $ROOT_POOL/downloads
        fi
        if ! zfs list $ROOT_POOL/shares >/dev/null 2>&1
        then
            zfs create -o mountpoint=$STORAGE_SHARE_DIR $ROOT_POOL/shares
        fi
    fi
else
    echo "creating backup links"
    ln -s $BACKUP_MOUNT_LOCATION/media $STORAGE_MEDIA_DIR
    ln -s $BACKUP_MOUNT_LOCATION/downloads $STORAGE_DOWNLOAD_DIR
    ln -s $BACKUP_MOUNT_LOCATION/configs $STORAGE_CONFIG_DIR
    ln -s $BACKUP_MOUNT_LOCATION/files $STORAGE_SHARE_DIR
fi

set_version $version ${0##*/}
exit 0
